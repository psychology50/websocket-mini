plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/* MySQL */
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'

	/* JPA */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	/* Redis */
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	/* Web Socket */
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	/* Reactor Netty */
	implementation "org.springframework.boot:spring-boot-starter-reactor-netty" // RabbitMQ에서 브로커 연결 및 통신 설정을 위해 기본으로 사용

	/* RabbitMQ */
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.amqp:spring-rabbit-stream'

	/* firebase */
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
