version: '3'
# docker system prune -af
# docker-compose -f docker-compose.yml up -d
# docker-compose -f docker-compose.yml down
services:
  app:
    image: pennyway/socket-test:latest
    container_name: spring-app
    ports:
      - "8080:8080"
    env_file:
      - .env-total
    depends_on:
      - rabbitmq
      - redis
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./proxy/test.conf:/etc/nginx/conf.d/default.conf
      - ./src/main/resources/static:/usr/share/nginx/html
    depends_on:
      - app
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13.7-management
    container_name: rabbitmq
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=jayang'
      - 'RABBITMQ_ERLANG_COOKIE=RabbitMQ-Cookies'
    ports:
      - "5672:5672"   # RabbitMQ default port
      - "15672:15672" # Web UI port
      - "61613:61613" # STOMP port
    command: >
      bash -c "
        rabbitmq-plugins enable --offline rabbitmq_stomp rabbitmq_web_stomp &&
        docker-entrypoint.sh rabbitmq-server
      "
    networks:
      - app-network

  redis:
    image: 'redis:latest'
    container_name: redis
    command: redis-server --requirepass jayang
    ports:
      - '32768:6379'
    labels:
      - "name=redis"
      - "mode=standalone"
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: socket
      MYSQL_USER: jayang
      MYSQL_PASSWORD: secret
    ports:
      - "32769:3306"
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network

networks:
  default:
    driver: bridge
  app-network:
    driver: bridge