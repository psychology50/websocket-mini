# events {
#     worker_connections 1024;
# }

upstream app_servers {
    server app:8080;
}

map $http_origin $allowed_origin {
    default "";
    "http://localhost:63342" $http_origin;
}

server {
    listen 80;
    listen [::]:80;

    server_name localhost;
    error_log /var/log/nginx/error.log debug;

    location /ws {
        if ($request_method = 'OPTIONS') {
             add_header 'Access-Control-Allow-Origin' $allowed_origin always;
             add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS' always;
             add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
             add_header 'Access-Control-Allow-Credentials' 'true' always;
             return 204;
        }

        rewrite ^/ws/(.*) /chat/$1 break;
        proxy_pass http://app_servers;
        proxy_http_version 1.1; # WebSocket 연결은 HTTP/1.1 이상으로 연결해야 함

        add_header 'Access-Control-Allow-Origin' $allowed_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # WebSocket 연결을 위한 설정
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
#         proxy_set_header Origin "";

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /ws/info {
        proxy_pass http://app_servers/ws;

        if ($request_method = 'OPTIONS') {
             add_header 'Access-Control-Allow-Origin' $allowed_origin always;
             add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS' always;
             add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
             add_header 'Access-Control-Allow-Credentials' 'true' always;
             return 204;
        }

        proxy_http_version 1.1; # WebSocket 연결은 HTTP/1.1 이상으로 연결해야 함

        add_header 'Access-Control-Allow-Origin' $allowed_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
